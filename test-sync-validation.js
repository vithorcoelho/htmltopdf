const axios = require('axios');

async function testSyncWebhookValidation() {
  console.log('üß™ Testando valida√ß√£o s√≠ncrona do webhook\n');
  
  const tests = [
    {
      name: 'Webhook v√°lido (resposta r√°pida)',
      data: {
        url: 'https://www.google.com',
        webhook: 'http://localhost:3001/webhook'
      },
      expectedStatus: 202,
      description: 'Deve validar webhook e aceitar requisi√ß√£o'
    },
    {
      name: 'Webhook inv√°lido (URL inexistente)',
      data: {
        url: 'https://www.google.com',
        webhook: 'http://localhost:9999/webhook'
      },
      expectedStatus: 400,
      description: 'Deve falhar rapidamente - webhook inacess√≠vel'
    },
    {
      name: 'Webhook timeout (URL lenta)',
      data: {
        url: 'https://www.google.com',
        webhook: 'http://httpbin.org/delay/5' // 5 segundos de delay
      },
      expectedStatus: 400,
      description: 'Deve falhar por timeout (> 2 segundos)'
    },
    {
      name: 'URL inv√°lida',
      data: {
        url: 'not-a-valid-url',
        webhook: 'http://localhost:3001/webhook'
      },
      expectedStatus: 400,
      description: 'Deve falhar por URL inv√°lida'
    },
    {
      name: 'Par√¢metros ausentes',
      data: {
        url: 'https://www.google.com'
        // webhook ausente
      },
      expectedStatus: 400,
      description: 'Deve falhar por par√¢metros obrigat√≥rios ausentes'
    }
  ];

  for (let i = 0; i < tests.length; i++) {
    const test = tests[i];
    console.log(`\nüìã Teste ${i + 1}/${tests.length}: ${test.name}`);
    console.log(`üìù ${test.description}`);
    
    const startTime = Date.now();
    
    try {
      const response = await axios.post('http://localhost:3000/api/generate-url', test.data, {
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer dev_token_123'
        },
        timeout: 10000
      });
      
      const duration = Date.now() - startTime;
      
      if (response.status === test.expectedStatus) {
        console.log(`‚úÖ SUCESSO - Status ${response.status} (${duration}ms)`);
        console.log(`üìÑ Resposta: ${response.data.message}`);
      } else {
        console.log(`‚ùå FALHOU - Status esperado: ${test.expectedStatus}, recebido: ${response.status}`);
      }
      
    } catch (error) {
      const duration = Date.now() - startTime;
      
      if (error.response?.status === test.expectedStatus) {
        console.log(`‚úÖ SUCESSO - Erro esperado ${error.response.status} (${duration}ms)`);
        console.log(`üìÑ Erro: ${error.response.data.error}`);
        console.log(`üìã Detalhes: ${error.response.data.details}`);
      } else {
        console.log(`‚ùå FALHOU - Status esperado: ${test.expectedStatus}, recebido: ${error.response?.status || 'TIMEOUT'} (${duration}ms)`);
        console.log(`üìÑ Erro: ${error.message}`);
      }
    }
  }
  
  console.log('\nüéØ Resumo dos testes:');
  console.log('‚úÖ Webhooks v√°lidos devem retornar 202 rapidamente');
  console.log('‚ùå Webhooks inv√°lidos devem retornar 400 em at√© 2 segundos');
  console.log('‚è±Ô∏è  URLs lentas devem dar timeout em 2 segundos');
  
  console.log('\nüí° Para testar webhook v√°lido:');
  console.log('1. Inicie o webhook: node webhook-test-server.js');
  console.log('2. Execute: node test-sync-validation.js');
}

// Executar testes
testSyncWebhookValidation();
